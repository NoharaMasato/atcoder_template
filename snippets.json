{
  "snippets":[
    {
      "type" : "json",
      "name": "for",
      "snippets_file": "for.json"
    },
    {
      "type" : "json",
      "name": "for2",
      "snippets_file": "for2.json"
    },
    {
      "type" : "json",
      "name": "input",
      "snippets_file": "input.json"
    },
    {
      "type" : "json",
      "name": "vector",
      "snippets_file": "vector.json"
    },
    {
      "type" : "json",
      "name": "ruisekiwa",
      "snippets_file": "ruiseki.json"
    },
    {
      "type" : "json",
      "name": "codeforce",
      "snippets_file": "codeforce.json"
    },
    {
      "type" : "json",
      "name": "yes",
      "snippets_file": "yes.json"
    },
    {
      "type" : "json",
      "name": "no",
      "snippets_file": "no.json"
    },
    {
      "type" : "json",
      "name": "yes_no",
      "snippets_file": "yes_no.json"
    },
    {
      "type" : "json",
      "name": "gcj",
      "snippets_file": "gcj.json"
    },
    {
      "type" : "json",
      "name": "gcd,lcm",
      "snippets_file": "gcd_lcm.json"
    },
    {
      "type" : "cpp",
      "name": "unionfine",
      "prefix": "uf",
      "snippets_file": "UnionFind.cpp",
      "description": "unionfind"
    },
    {
      "type" : "cpp",
      "name": "bfs",
      "prefix": "bfs",
      "snippets_file": "BFS.cpp",
      "description": "unionfind"
    },
    {
      "type" : "cpp",
      "name": "dijkstra",
      "prefix": "dik",
      "snippets_file": "Dijkstra.cpp",
      "description": "unionfind"
    },
    {
      "type" : "cpp",
      "name": "dfs",
      "prefix": "dfs",
      "snippets_file": "DFS.cpp",
      "description": "dfs"
    },
    {
      "type" : "cpp",
      "name": "binary_all_search",
      "prefix": "bas",
      "snippets_file": "BinaryAllSearch.cpp",
      "description": "binary_all_search"
    },
    {
      "type" : "cpp",
      "name": "binary_search",
      "prefix": "bs",
      "snippets_file": "BinarySearch.cpp",
      "description": "binary_search"
    },
    {
      "type" : "cpp",
      "name": "next_permutation",
      "prefix": "np",
      "snippets_file": "NextPermutation.cpp",
      "description": "next_permutation"
    },
    {
      "type" : "cpp",
      "name": "range minimum query",
      "prefix": "rmq",
      "snippets_file": "RMQ.cpp",
      "description": "range minimum query"
    }
  ]
}
